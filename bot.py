import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler, ContextTypes, CallbackQueryHandler
)

# –í—à–∏—Ç—ã–µ —Ç–æ–∫–µ–Ω –∏ –∞–¥–º–∏–Ω ID
BOT_TOKEN = "7767900402:AAHsRjDChEL83frntnxkN3coswjP9sbX0Rg"
ADMIN_ID = 5676657478

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –•—ç–Ω–¥–ª–µ—Ä—ã
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üìÖ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫", callback_data="book")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Taiga Family! üåø
–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫:", reply_markup=reply_markup)

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    if query.data == "book":
        keyboard = [
            [InlineKeyboardButton("–°–µ–≥–æ–¥–Ω—è üìÖ", callback_data="date_today"),
             InlineKeyboardButton("–ó–∞–≤—Ç—Ä–∞ üìÖ", callback_data="date_tomorrow")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:", reply_markup=reply_markup)
    elif query.data.startswith("date_"):
        context.user_data["date"] = "–°–µ–≥–æ–¥–Ω—è" if query.data == "date_today" else "–ó–∞–≤—Ç—Ä–∞"
        keyboard = [
            [InlineKeyboardButton("18:00 ‚è∞", callback_data="time_18"),
             InlineKeyboardButton("19:00 ‚è∞", callback_data="time_19")],
            [InlineKeyboardButton("20:00 ‚è∞", callback_data="time_20"),
             InlineKeyboardButton("21:00 ‚è∞", callback_data="time_21")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è:", reply_markup=reply_markup)
    elif query.data.startswith("time_"):
        context.user_data["time"] = query.data.replace("time_", "") + ":00"
        keyboard = [
            [InlineKeyboardButton("2 üë•", callback_data="guests_2"),
             InlineKeyboardButton("4 üë•", callback_data="guests_4")],
            [InlineKeyboardButton("6 üë•", callback_data="guests_6"),
             InlineKeyboardButton("8 üë•", callback_data="guests_8")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text("–°–∫–æ–ª—å–∫–æ –≥–æ—Å—Ç–µ–π –±—É–¥–µ—Ç?", reply_markup=reply_markup)
    elif query.data.startswith("guests_"):
        context.user_data["guests"] = query.data.replace("guests_", "")
        text = (
            f"üìÖ –î–∞—Ç–∞: {context.user_data['date']}
"
            f"‚è∞ –í—Ä–µ–º—è: {context.user_data['time']}
"
            f"üë• –ì–æ—Å—Ç–µ–π: {context.user_data['guests']}

"
            "‚úÖ –í–∞—à–∞ –±—Ä–æ–Ω—å –ø—Ä–∏–Ω—è—Ç–∞!"
        )
        await query.edit_message_text(text)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É
        admin_message = (
            f"üîî –ù–æ–≤–∞—è –±—Ä–æ–Ω—å!
"
            f"üë§ @{query.from_user.username or query.from_user.first_name}
"
            f"üìÖ –î–∞—Ç–∞: {context.user_data['date']}
"
            f"‚è∞ –í—Ä–µ–º—è: {context.user_data['time']}
"
            f"üë• –ì–æ—Å—Ç–µ–π: {context.user_data['guests']}"
        )
        await context.bot.send_message(chat_id=ADMIN_ID, text=admin_message)

def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))
    logger.info("Taiga Family Bot –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
